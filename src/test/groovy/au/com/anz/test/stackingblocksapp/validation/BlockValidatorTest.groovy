package au.com.anz.test.stackingblocksapp.validation

import au.com.anz.test.stackingblocksapp.TestData
import au.com.anz.test.stackingblocksapp.cli.BlockCommandUtil
import au.com.anz.test.stackingblocksapp.domain.Block
import au.com.anz.test.stackingblocksapp.exception.ValidationException
import spock.lang.Specification

class BlockValidatorTest extends Specification {
  def "ValidationException when number of input blocks n not matching constraint 1 <= n <= 100 "() {
    given:
    String input = "[[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7],[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]"
    when:
    BlockCommandUtil.createBlocks.andThen(BlockValidator.validateInputBlockCount).apply(input)
    then:
    thrown(ValidationException.class)
  }

  def "No ValidationException when number of input blocks n matching constraint 1 <= n <= 100 "() {
    given:
    String input = "[[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]"
    when:
    List<Block> blocks = BlockCommandUtil.createBlocks.andThen(BlockValidator.validateInputBlockCount).apply(input)
    then:
    blocks.size() == 6
    blocks == TestData.DATA_SET_3
  }
}
